/*
 * Stash
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.7.0
 * Contact: hello@appscode.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.appscode.stash.client.apis;

import com.appscode.stash.client.ApiException;
import io.kubernetes.client.models.V1APIResourceList;
import io.kubernetes.client.models.V1DeleteOptions;
import io.kubernetes.client.models.V1Status;
import com.appscode.stash.client.models.V1alpha1Snapshot;
import com.appscode.stash.client.models.V1alpha1SnapshotList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RepositoriesStashAppscodeComV1alpha1Api
 */
@Ignore
public class RepositoriesStashAppscodeComV1alpha1ApiTest {

    private final RepositoriesStashAppscodeComV1alpha1Api api = new RepositoriesStashAppscodeComV1alpha1Api();

    
    /**
     * 
     *
     * delete a Snapshot
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteNamespacedSnapshotTest() throws ApiException {
        String name = null;
        String namespace = null;
        V1DeleteOptions body = null;
        String pretty = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        V1Status response = api.deleteNamespacedSnapshot(name, namespace, body, pretty, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * get available resources
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAPIResourcesTest() throws ApiException {
        V1APIResourceList response = api.getAPIResources();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind Snapshot
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listNamespacedSnapshotTest() throws ApiException {
        String namespace = null;
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1alpha1SnapshotList response = api.listNamespacedSnapshot(namespace, _continue, fieldSelector, includeUninitialized, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind Snapshot
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listSnapshotForAllNamespacesTest() throws ApiException {
        String _continue = null;
        String fieldSelector = null;
        Boolean includeUninitialized = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        V1alpha1SnapshotList response = api.listSnapshotForAllNamespaces(_continue, fieldSelector, includeUninitialized, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified Snapshot
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readNamespacedSnapshotTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        V1alpha1Snapshot response = api.readNamespacedSnapshot(name, namespace, pretty);

        // TODO: test validations
    }
    
}
